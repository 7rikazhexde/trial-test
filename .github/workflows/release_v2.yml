name: Create Release V2

# ワークフローの処理の流れ:
# 1. 未リリースのタグを検出し、選択肢として提供
# 2. ユーザーが選択したタグでリリースを作成
# 3. 変更ログの生成（前のリリースタグからの変更を取得）
# 4. GitHubリリースの作成

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Select the tag to create a release for'
        required: true
        type: choice
        options: ${{ steps.get-tags.outputs.tags }}

jobs:
  get-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.set-tags.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get unreleased tags
        id: set-tags
        run: |
          # 最新のリリースタグを取得
          latest_release=$(gh release list --limit 1 --exclude-drafts --exclude-pre-releases | cut -f 1)

          # 最新のリリースタグ以降の全てのタグを取得し、JSON形式に変換
          tags=$(git tag --sort=-creatordate | while read tag; do
            if [ "$tag" = "$latest_release" ]; then
              break
            fi
            echo "$tag"
          done | jq -R -s -c 'split("\n")[:-1]')

          echo "tags=$tags" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-release:
    needs: get-tags
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set repository name
        run: echo "REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Get previous release tag
        id: get_previous_tag
        run: |
          previous_tag=$(gh release list --limit 1 --exclude-drafts --exclude-pre-releases | cut -f 1)
          echo "previous_tag=$previous_tag" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate changelog
        id: changelog
        run: |
          changelog=$(git log --pretty=format:"- %s" ${{ steps.get_previous_tag.outputs.previous_tag }}..${{ github.event.inputs.tag }})
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: ${{ env.REPO_NAME }}-${{ github.event.inputs.tag }}
          body: |
            Changes in this Release:
            ${{ steps.changelog.outputs.changelog }}

            For full changes, see the [comparison view](${{ github.server_url }}/${{ github.repository }}/compare/${{ steps.get_previous_tag.outputs.previous_tag }}..${{ github.event.inputs.tag }})
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

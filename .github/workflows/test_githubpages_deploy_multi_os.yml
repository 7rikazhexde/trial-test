name: Test and Deploy Multi-OS

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "coverage"
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    env:
      TZ: "Asia/Tokyo"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set timezone
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            tzutil /s "Tokyo Standard Time"
            echo "Setting TZ environment variable"
            echo "TZ=Asia/Tokyo" >> $GITHUB_ENV
          elif [ "${{ runner.os }}" == "macOS" ]; then
            sudo systemsetup -settimezone Asia/Tokyo
          fi
        shell: bash
      - name: Verify timezone
        run: |
          echo "Current time: $(date)"
          echo "Current TZ: $TZ"
          python -c "import time; print(f'Python time: {time.strftime(\"%Y-%m-%d %H:%M:%S %Z\")}')"
        shell: bash
      - name: Install poetry
        run: pip install poetry
      - name: Poetry setup
        run: poetry install
      - name: Run tests
        id: pytest
        continue-on-error: true
        run: |
          mkdir -p test_results
          poetry run pytest --html=test_results/report_page.html
        shell: bash
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: test_results
        if: always()

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      - name: Deploy to GitHub Pages
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin ghpages:ghpages || git checkout -b ghpages
          git checkout ghpages
          for os in ubuntu-latest macos-12 windows-latest; do
            mkdir -p $os
            if [ -f test-results-$os/report_page.html ]; then
              mv test-results-$os/report_page.html $os/
              if [ -d test-results-$os/assets ]; then
                cp -r test-results-$os/assets $os/
              fi
              git add $os
            else
              echo "No report found for $os"
            fi
          done
          git commit -m "Add test reports to GitHub Pages" || echo "No changes to commit"
          git push origin ghpages --force
      - name: Generate URL list
        run: |
          URL_LIST=""
          for os in ubuntu-latest macos-12 windows-latest; do
            URL_LIST="${URL_LIST}https://7rikazhexde.github.io/trial-test/${os}/report_page.html\n"
          done
          echo "URL_LIST<<EOF" >> $GITHUB_ENV
          echo -e "$URL_LIST" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Notify on Line
        uses: snow-actions/line-notify@v1.1.0
        with:
          access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
          message: |
            Deployment completed. Check reports at:
            https://7rikazhexde.github.io/trial-test/

            Check URL:
            ${{ env.URL_LIST }}

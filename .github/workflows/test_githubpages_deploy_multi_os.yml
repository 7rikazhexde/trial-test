name: Test and Deploy Multi-OS

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "coverage"
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
        python-version: ["3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Install FFmpeg
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get update && sudo apt-get install -y ffmpeg
          elif [ "${{ matrix.os }}" == "macos-12" ]; then
            brew install ffmpeg
          else
            choco install ffmpeg
          fi
        shell: bash
      - name: Run tests
        run: |
          mkdir -p test_results
          poetry run pytest --html=test_results/report.html || (echo "Tests failed" && exit 1)
        shell: bash
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}
          path: test_results
        if: always()

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Deploy to GitHub Pages
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin ghpages:ghpages || git checkout -b ghpages
          git checkout ghpages
          for os in ubuntu-latest macos-12 windows-latest; do
            mkdir -p $os
            if [ -f test-results-$os/report.html ]; then
              mv test-results-$os/report.html $os/
              if [ -d test-results-$os/assets ]; then
                cp -r test-results-$os/assets $os/
              fi
              git add $os
            else
              echo "No report found for $os"
            fi
          done
          git commit -m "Add test reports to GitHub Pages" || echo "No changes to commit"
          git push origin ghpages --force
      - name: Notify on Line
        uses: snow-actions/line-notify@v1.1.0
        with:
          access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
          message: |
            Deployment completed. Check reports at:
            https://7rikazhexde.github.io/video-grid-merge/

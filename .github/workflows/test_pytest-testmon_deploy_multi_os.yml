name: pytest-testmon Deploy Multi-OS

on:
  push:
    branches:
      - 'main'

jobs:
  test-and-deploy-testmon:
    if: github.actor != 'dependabot[bot]' && !startsWith(github.event.head_commit.message, 'Bump version')
    strategy:
      matrix:
        os: &os_versions
          - ubuntu-latest
          - macos-13
          - windows-latest
        python-version: &python_versions
          - '3.11'
          - '3.12'
    runs-on: ${{ matrix.os }}
    env:
      TZ: "Asia/Tokyo"
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tests_executed: ${{ steps.pytest-testmon.outputs.tests_executed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Tokyo"
          timezoneMacos: "Asia/Tokyo"
          timezoneWindows: "Tokyo Standard Time"

      - name: Install poetry
        run: |
          pip install poetry
          echo "Poetry version: $(poetry --version)"

      - name: Install dependencies
        run: |
          poetry install

      - name: Run pytest with testmon
        id: pytest-testmon
        run: |
          pytest --testmon

  deploy-testmon:
    needs: test-and-deploy-testmon
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ghpages branch
        run: |
          git fetch origin ghpages
          git checkout ghpages

      - name: Deploy .testmondata for all OS and Python versions
        run: |
          artifact_folder="${{ runner.temp }}/artifacts"
          changes_made=false
          for os in *os_versions; do
            for python_version in *python_versions; do
              folder_name="$os/$python_version"
              echo "Processing testmon data for $os with Python $python_version..."
              if [ -f "${artifact_folder}/.testmondata" ]; then
                echo "Changes detected for $os with Python $python_version, updating..."
                mkdir -p $folder_name
                mv "${artifact_folder}/.testmondata" "$folder_name/.testmondata"
                git add $folder_name
                changes_made=true
              else
                echo "No testmon data found for $os with Python $python_version"
              fi
            done
          done

          if [ "$changes_made" = true ]; then
            echo "Changes made, committing and pushing..."
            git commit -m "Update testmon data on GitHub Pages"
            git push origin ghpages
          else
            echo "No changes to commit"
          fi

  trigger-other-workflows:
    needs: [test-and-deploy-testmon, deploy-testmon]
    if: needs.test-and-deploy-testmon.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger pytest-cov workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-cov
          client-payload: '{"skip_tests": false}'

      - name: Trigger pytest-html workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-html
          client-payload: '{"skip_tests": false}'

      - name: Log workflow triggers
        run: |
          echo "Triggered pytest-cov and pytest-html workflows."
          echo "Check the Actions tab for these workflows to start."

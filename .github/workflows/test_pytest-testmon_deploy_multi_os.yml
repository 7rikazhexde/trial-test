# ワークフローの処理の流れ:
# 1. トリガー条件:
#    - mainブランチへのプッシュ時に起動
#    - Dependabotによる実行やバージョンバンプのコミットは除外
# 2. 複数の環境（OS、Pythonバージョン）でのセットアップと前回の.testmondataの取得
#    - Ubuntu, macOS, Windowsの最新バージョンで実行
#    - Python 3.11と3.12を使用
# 3. 各OS・Pythonバージョンごとに個別の.testmondataファイルを取得
# 4. pytest-testmonを使用してテスト実行
#    - 前回の.testmondataがある場合、それを使用して差分テストを実行
# 5. testmon結果の確認とテスト実行有無の判定
#    - テストが実行された場合、後続のジョブをトリガー
# 6. 更新された.testmondataファイルのアップロード
#    - テストが実行された場合のみ実行
# 7. GitHub Pagesへの.testmondataファイルのデプロイ
#    - テストが実行され、かつ変更がある場合のみ実行
# 8. pytest-covとpytest-htmlワークフローのトリガー
#    - テストが実行された場合のみトリガー

name: pytest-testmon Deploy Multi-OS

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy-testmon:
    if: github.actor != 'dependabot[bot]' && !startsWith(github.event.head_commit.message, 'Bump version')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: [3.11, 3.12]
    runs-on: ${{ matrix.os }}
    env:
      TZ: Asia/Tokyo
    permissions:
      contents: write
      pull-requests: write
    outputs:
      tests_executed: ${{ steps.pytest-testmon.outputs.tests_executed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0
        # echoコマンドはusesステップには必要ありません。

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
        # echoコマンドはusesステップには必要ありません。

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: Asia/Tokyo
          timezoneMacos: Asia/Tokyo
          timezoneWindows: Tokyo Standard Time
        # echoコマンドはusesステップには必要ありません。

      - name: Install poetry
        run: |
          echo "Installing Poetry..."
          pip install poetry
          echo "Poetry installed. Version: $(poetry --version)"

      - name: Install dependencies
        run: |
          echo "Installing project dependencies with Poetry..."
          poetry install
          echo "Dependencies installed:"
          poetry show --tree

      - name: Fetch previous testmon data
        shell: bash
        run: |
          echo "Fetching previous testmon data for OS: ${{ matrix.os }} and Python: ${{ matrix.python-version }}..."
          git fetch origin ghpages:ghpages || true
          folder_name="testmon-data_${{ matrix.os }}_python_${{ matrix.python-version }}"
          git checkout ghpages -- $folder_name/.testmondata || true
          if [ -f $folder_name/.testmondata ]; then
            echo "Previous testmon data found. Moving to current directory..."
            mv $folder_name/.testmondata .testmondata
            rm -rf $folder_name
          else
            echo "No previous testmon data found for ${{ matrix.os }} with Python ${{ matrix.python-version }}."
          fi
        continue-on-error: true

      - name: Run tests with testmon
        id: pytest-testmon
        shell: bash
        run: |
          echo "Running tests with testmon for OS: ${{ matrix.os }} and Python: ${{ matrix.python-version }}..."
          poetry run pytest --testmon
          echo "Tests completed for OS: ${{ matrix.os }} and Python: ${{ matrix.python-version }}"

      - name: Deploy testmon data to GitHub Pages
        if: always()
        run: |
          echo "Starting deployment of testmon data to GitHub Pages..."
          changes_made=false
          folder_name="testmon-data_${{ matrix.os }}_python_${{ matrix.python-version }}"
          artifact_folder="downloaded-artifacts/testmon-data-${{ matrix.os }}-python-${{ matrix.python-version }}"
          echo "Processing deployment for ${{ matrix.os }} with Python ${{ matrix.python-version }}..."
          if [ -f "${artifact_folder}/.testmondata" ]; then
            echo "Changes detected for ${{ matrix.os }} with Python ${{ matrix.python-version }}, updating..."
            mkdir -p $folder_name
            mv "${artifact_folder}/.testmondata" "$folder_name/.testmondata"
            git add $folder_name
            changes_made=true
          else
            echo "No testmon data found for ${{ matrix.os }} with Python ${{ matrix.python-version }}"
            echo "Contents of ${artifact_folder}:"
            ls -la "${artifact_folder}"
          fi

          if [ "$changes_made" = true ]; then
            echo "Changes made, committing and pushing to GitHub Pages..."
            git commit -m "Update testmon data on GitHub Pages"
            git push origin ghpages
            echo "Testmon data updated on GitHub Pages."
            echo "deploy_status=updated" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit, skipping GitHub Pages update."
            echo "deploy_status=unchanged" >> $GITHUB_OUTPUT

      - name: List deployed files
        if: steps.deploy_testmon.outputs.deploy_status == 'updated'
        run: |
          echo "Listing deployed testmon data files..."
          git checkout ghpages
          find . -name ".testmondata"
          echo "Contents of ghpages branch:"
          ls -R

  trigger-other-workflows:
    needs: test-and-deploy-testmon
    if: needs.test-and-deploy-testmon.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger pytest-cov workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-cov
          client-payload: '{"skip_tests": false}'

      - name: Trigger pytest-html workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-html
          client-payload: '{"skip_tests": false}'

      - name: Log workflow triggers
        run: |
          echo "Workflows pytest-cov and pytest-html have been triggered."

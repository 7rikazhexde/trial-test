name: pytest-testmon Deploy Multi-OS

on:
  push:
    branches:
      - 'main'

jobs:
  test-and-deploy-testmon:
    # Dependabotによる実行やバージョンバンプのコミットを除外
    if: github.actor != 'dependabot[bot]' && !startsWith(github.event.head_commit.message, 'Bump version')
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        python-version: ['3.12']
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      tests_executed: ${{ steps.pytest-testmon.outputs.tests_executed }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0  # 全履歴を取得

      - name: Set up Python
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "Asia/Tokyo"
          timezoneMacos: "Asia/Tokyo"
          timezoneWindows: "Tokyo Standard Time"

      - name: Install poetry
        run: |
          pip install poetry
          echo "Poetry version: $(poetry --version)"

      - name: Install dependencies
        run: |
          poetry install
          echo "Installed dependencies:"
          poetry show --tree

      - name: Fetch previous testmon data
        shell: bash
        run: |
          echo "Fetching previous testmon data..."
          git fetch origin ghpages:ghpages || true
          folder_name="testmon-data_${{ matrix.os }}_python_${{ matrix.python-version }}"
          git checkout ghpages -- $folder_name/.testmondata || true
          if [ -f $folder_name/.testmondata ]; then
            echo "Previous testmon data found. Moving to current directory."
            mv $folder_name/.testmondata .testmondata
            rm -rf $folder_name
          else
            echo "No previous testmon data found for ${{ matrix.os }} with Python ${{ matrix.python-version }}."
          fi
        continue-on-error: true

      - name: Set matrix output
        id: set-matrix
        run: |
          echo "matrix=${{ toJson(matrix) }}" >> $GITHUB_OUTPUT
          echo "Matrix output: ${{ toJson(matrix) }}"

      - name: Run tests with testmon
        id: pytest-testmon
        shell: bash
        run: |
          echo "Running tests with testmon..."
          output=$(poetry run pytest --testmon -v)
          echo "$output"

          # testmonの出力をGitHub Actionsの出力変数に保存
          echo "testmon_output<<EOF" >> $GITHUB_OUTPUT
          echo "$output" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # 出力を確認して、テストが実行されなかった場合はフラグを設定
          if echo "$output" | grep -q "collected 0 items"; then
            echo "No tests executed. Skipping deployment and further workflows."
            echo "tests_executed=false" >> $GITHUB_OUTPUT
          else
            echo "Tests executed. Proceeding with deployment and further workflows."
            echo "tests_executed=true" >> $GITHUB_OUTPUT
          fi

      - name: Upload testmon data
        uses: actions/upload-artifact@v4.4.0
        with:
          name: testmon-data-${{ matrix.os }}-python-${{ matrix.python-version }}
          path: .testmondata
          if-no-files-found: warn
        if: steps.pytest-testmon.outputs.tests_executed == 'true'

  deploy-testmon:
    needs: test-and-deploy-testmon
    if: needs.test-and-deploy-testmon.result == 'success' && needs.test-and-deploy-testmon.outputs.tests_executed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.0
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          path: downloaded-artifacts

      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          echo "Git configuration set."

      - name: Verify ghpages branch
        run: |
          git fetch origin ghpages:ghpages || echo "ghpages branch does not exist"
          git rev-parse --verify ghpages || git checkout -b ghpages

      - name: Deploy testmon data to GitHub Pages
        id: deploy_testmon
        env:
          MATRIX: ${{ needs.test-and-deploy-testmon.outputs.matrix }}
        run: |
          echo "Deploying testmon data to GitHub Pages..."
          git checkout ghpages

          echo "MATRIX: $MATRIX"

          # MATRIXがnullまたは空の場合のエラーハンドリング
          if [ -z "$MATRIX" ] || [ "$MATRIX" = "null" ]; then
            echo "Error: MATRIX is null or empty"
            exit 1
          fi

          # Pythonを使用してJSONをパース
          echo "Parsing MATRIX..."
          os=$(python -c "import json,os;print(' '.join(json.loads(os.environ['MATRIX'])['os']))")
          python_version=$(python -c "import json,os;print(' '.join(json.loads(os.environ['MATRIX'])['python-version']))")

          echo "Parsed OS: $os"
          echo "Parsed Python Version: $python_version"

          for current_os in $os; do
            for current_python in $python_version; do
              folder_name="testmon-data_${current_os}_python_${current_python}"
              artifact_folder="downloaded-artifacts/testmon-data-${current_os}-python-${current_python}"
              echo "Processing $current_os with Python ${current_python}..."
              echo "Checking for folder: ${artifact_folder}"
              if [ -d "${artifact_folder}" ]; then
                echo "Testmon data found for $current_os with Python ${current_python}, updating..."
                mkdir -p $folder_name
                mv "${artifact_folder}"/.testmondata "$folder_name/.testmondata" 2>/dev/null || true
                echo "Contents of $folder_name after move:"
                ls -la $folder_name
                git add $folder_name
                git commit -m "Update testmon data for $current_os Python ${current_python}" || echo "No changes to commit"
              else
                echo "No testmon data found for $current_os with Python ${current_python}"
              fi
            done
          done

          echo "Pushing changes..."
          git push origin ghpages || echo "No changes to push"
          echo "deploy_status=updated" >> $GITHUB_OUTPUT

      - name: List deployed files
        if: steps.deploy_testmon.outputs.deploy_status == 'updated'
        run: |
          git checkout ghpages
          echo "Deployed testmon data files:"
          find . -name ".testmondata"
          echo "Contents of ghpages branch:"
          ls -R

  trigger-other-workflows:
    needs: [test-and-deploy-testmon, deploy-testmon]
    if: needs.test-and-deploy-testmon.result == 'success' && needs.test-and-deploy-testmon.outputs.tests_executed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger pytest-cov workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-cov
          client-payload: '{"skip_tests": false}'
        continue-on-error: true

      - name: Trigger pytest-html workflow
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          event-type: run-pytest-html
          client-payload: '{"skip_tests": false}'
        continue-on-error: true

      - name: Log workflow triggers
        run: |
          echo "Attempted to trigger pytest-cov and pytest-html workflows."
          echo "Check the Actions tab for these workflows to start."
          echo "If triggers failed, check repository dispatch permissions and settings."

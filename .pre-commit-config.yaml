# pre-commit stop running hooks after the first failure.
fail_fast: true
# A list of repository mappings
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    # Specify version or tag to use (as of 24.8.3)
    rev: v4.6.0
    hooks:
      # Remove spaces at end of lines except markdown
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      # Make the last line of the file a newline code
      - id: end-of-file-fixer
      # Unify line break code to LF
      - id: mixed-line-ending
        args: [--fix=lf]
      # toml syntax check
      - id: check-toml
      # yaml syntax check
      - id: check-yaml

  # https://python-poetry.org/docs/pre-commit-hooks/#usage
  - repo: https://github.com/python-poetry/poetry
    # Cannot be executed with local designation (as of 24.8.3)
    rev: 1.8.3
    hooks:
      - id: poetry-check
        verbose: true
      - id: poetry-lock
        verbose: true
      - id: poetry-export
        args: ["-f", "requirements.txt", "-o", "requirements.txt"]
        verbose: true
        files: ^pyproject\.toml$
      - id: poetry-export
        args: ["--with", "dev", "-f", "requirements.txt", "-o", "requirements-dev.txt"]
        verbose: true
        files: ^pyproject\.toml$

  # Reference: https://github.com/DavidAnson/markdownlint-cli2#overview
  # > markdownlint-cli is a traditional command-line interface for markdownlint.
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.41.0
    hooks:
      - id: markdownlint
        args: ["--config", ".markdownlint.json", "README.md"]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.5.6
    hooks:
      - id: ruff
        args: ["--fix","project_a"]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests==2.32.0.20240622]
        args: [--config-file=pyproject.toml]

  # Repository local hooks
  - repo: local
    hooks:
    #-   id: isort
    #    name: isort
    #    stages: [commit]
    #    language: system
    #    entry: poetry run isort ci tests project_a
    #    types: [python]

    #-   id: black
    #    name: black
    #    stages: [commit]
    #    language: system
    #    entry: poetry run black ci tests project_a
    #    types: [python]
    #    exclude: resources_bin.py

    #-   id: flake8
    #    name: flake8
    #    stages: [commit]
    #    language: system
    #    entry: poetry run flake8 ci tests project_a
    #    types: [python]

    #-   id: mypy
    #    name: mypy
    #    stages: [commit]
    #    language: system
    #    entry: poetry run mypy
    #    types: [python]

    -   id: mdformat
        name: mdformat
        stages: [commit]
        language: system
        entry: poetry run mdformat README.md
        types: [markdown]

    # Original script
    #- id: update-pyproject
    #  name: Update pyproject.toml version
    #  entry: poetry run python ci/update_pyproject_version.py
    #  language: system
    #  pass_filenames: false
    #  stages: [commit]
    #  additional_dependencies: []
